[versions]
kotlin = "1.6.21"
ktor = "2.0.0"
exposed = "0.37.3"
koin = "3.2.0-beta-1"
coroutines = "1.6.3"
h2 = "2.1.214"
postgresql = "42.3.2"
logback = "1.2.11"
junit = "5.8.2"
mockk = "1.12.4"
kotlinx_html = "0.7.5"
assertj = "3.23.1"
kotlin_wrappers = "18.0.0-pre.332-kotlin-1.6.21"
hikari_cp = "3.4.5"
validation_api = "2.0.1.Final"
hibernate_validator = "6.0.17.Final"
javax_el = "3.0.1-b12"
kotlinx_datetime = "0.3.2"
kotlinx_serialization_json = "1.3.3"
google_guava = "30.1.1-jre"
commons_codes = "1.15"
ktlint = "0.45.0"
shadow = "7.0.0"
benasher44_uuid = "0.4.1"
kotlin_logging = "2.1.20"
kotlin_validator = "0.5.0"
jansi = "2.4.0"
koin_ksp = "1.0.0-beta-2"
ksp = "1.6.10-1.0.2"
spotless = "6.7.2"
palantir_docker_version = "0.34.0"

[plugins]
shadow-jar = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
palantir-docker = { id = "com.palantir.docker", version.ref = "palantir_docker_version" }

[libraries]
#####################################################
#
# kotlinX Libraries
#
#####################################################
# coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-coreJs = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-js", version.ref = "coroutines" }
kotlinx-coroutines-slf4j = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-coroutines-testJs = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test-js", version.ref = "coroutines" }

# datetime
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx_datetime" }

# serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx_serialization_json" }

# html-jvm
kotlinx-html-jvm = { module = "org.jetbrains.kotlinx:kotlinx-html-jvm", version.ref = "kotlinx_html" }

#####################################################
#
# ktor Libraries
#
#####################################################
# common
ktor-kotlinxSerialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-utils = { module = "io.ktor:ktor-utils", version.ref = "ktor" }

# server
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-hostCommon = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-server-htmlBuilder = { module = "io.ktor:ktor-server-html-builder", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-authJwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-callId = { module = "io.ktor:ktor-server-call-id", version.ref = "ktor" }
ktor-server-callLogging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-doubleReceive = { module = "io.ktor:ktor-server-double-receive", version.ref = "ktor" }
ktor-server-contentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-sessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor" }
ktor-server-defaultHeaders = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-statusPages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests", version.ref = "ktor" }
ktor-server-testHost = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }

# client
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-loggingJvm = { module = "io.ktor:ktor-client-logging-jvm", version.ref = "ktor" }
ktor-client-mockJvm = { module = "io.ktor:ktor-client-mock-jvm", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-authJs = { module = "io.ktor:ktor-client-auth-js", version.ref = "ktor" }
ktor-client-mockJs = { module = "io.ktor:ktor-client-mock-js", version.ref = "ktor" }

#####################################################
#
# Koin Libraries
#
#####################################################
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-test-junit5 = { module = "io.insert-koin:koin-test-junit5", version.ref = "koin" }

koin-logger-slf4j = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koin" }

koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin_ksp" }
koin-ksp-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin_ksp" }

#####################################################
#
# Logging Libraries
#
#####################################################
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

kotlin-logging = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlin_logging" }
kotlin-logging-jvm = { module = "io.github.microutils:kotlin-logging-jvm", version.ref = "kotlin_logging" }

#####################################################
#
# Validation(JVM only) Libraries
#
#####################################################
validation-api = { module = "javax.validation:validation-api", version.ref = "validation_api" }
hibernate-validator = { module = "org.hibernate.validator:hibernate-validator", version.ref = "hibernate_validator" }
javax-el = { module = "org.glassfish:javax.el", version.ref = "javax_el" }

#####################################################
#
# exposed Libraries
#
#####################################################
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }

#####################################################
#
# Datasource Libraries
#
#####################################################
hikari-cp = { module = "com.zaxxer:HikariCP", version.ref = "hikari_cp" }
h2-database = { module = "com.h2database:h2", version.ref = "h2" }

#####################################################
#
# JDBC Libraries
#
#####################################################
jdbc-postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }

#####################################################
#
# Google Libraries
#
#####################################################
google-guava = { module = "com.google.guava:guava", version.ref = "google_guava" }
google-symbol-processingApi = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }

#####################################################
#
# Apache Libraries
#
#####################################################
apache-commons-codes = { module = "commons-codec:commons-codec", version.ref = "commons_codes" }

#####################################################
#
# other utility Libraries
#
#####################################################
benasher44-uuid = { module = "com.benasher44:uuid", version.ref = "benasher44_uuid" }
fusesource-jansi = { module = "org.fusesource.jansi:jansi", version.ref = "jansi" }

#####################################################
#
# testting Libraries
#
#####################################################
# JUnit5
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
#junit-vintage = { module = "org.junit.vintage", version.ref = "benasher44_uuid" }
#junit-vintage-engine = { module = "junit-vintage-engine", version.ref = "benasher44_uuid" }

# assertJ
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }

# mockK
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

#####################################################
#
# kotlin-wrapper Libraries
#
#####################################################
kotlin-wrapper-bom = { module = "org.jetbrains.kotlin-wrappers:kotlin-wrappers-bom", version.ref = "kotlin_wrappers" }

kotlin-wrapper-react = { module = "org.jetbrains.kotlin-wrappers:kotlin-react" }
kotlin-wrapper-reactDom = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-dom" }
kotlin-wrapper-styled = { module = "org.jetbrains.kotlin-wrappers:kotlin-styled" }
kotlin-wrapper-reactRouterDom = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-router-dom" }
kotlin-wrapper-redux = { module = "org.jetbrains.kotlin-wrappers:kotlin-redux" }
kotlin-wrapper-reactRedux = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-redux" }
